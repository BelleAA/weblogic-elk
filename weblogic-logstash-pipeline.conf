input {
    beats {
        port => "5043"
    }
}

filter {
  # WebLogic Server Log
  if "weblogic-server-log" in [tags] {
    grok {
      patterns_dir => "./patterns"
      match => [ "message", "####<%{WLS_SERVERLOG_DATE:wls_timestamp}%{SPACE}%{DATA:wls_timezone}>%{SPACE}<%{LOGLEVEL:wls_level}>%{SPACE}<%{DATA:wls_subsystem}>%{SPACE}<%{DATA:wls_host}>%{SPACE}<%{DATA:wls_server}>%{SPACE}<%{DATA:wls_thread}>%{SPACE}<([<>a-zA-Z ]*)>%{SPACE}<%{DATA:wls_transactionid}>%{SPACE}<%{DATA:wls_diagcontid}>%{SPACE}<%{DATA:wls_rawtime}>%{SPACE}<%{DATA:wls_code}>%{SPACE}<%{GREEDYDATA:wls_message}" ]
    }
    # CEST does not exist in JODA-TIME, changed to CET
    translate {
      field       => 'wls_timezone'
      destination => 'wls_timezone'
      fallback => '%{wls_timezone}'
      override => "true"
      dictionary  => [
        'CEST',  'CET'
      ]
    }
    date {
      match => [ "wls_timestamp", "dd-MMM-yyyy HH'H'mm'''"]
      locale => "es-ES"
      timezone => "%{wls_timezone}"
      target => "wls_timestamp"
    }
    mutate {
       remove_field => [ 'wls_timezone' , 'message']
    }
  }

  #WebLogic Server Http Access Log
  if "weblogic-access-log" in [tags] {
    grok {
    patterns_dir=>"./patterns"
      match => [ "message", "%{ACCESSDATE:acc_date}\s+%{TIME:acc_time}\s+%{WORD:acc_verb}\s+%{DATA:acc_transactionid}\s+%{DATA:acc_num}\s+%{URIPATHPARAM:acc_uri}\s+%{NUMBER:acc_status}\s+%{NUMBER:acc_response_time}" ]
    }
    mutate {
      replace => ['acc_timestamp', '%{acc_date} %{acc_time}']
    }
    date {
      match => [ "acc_timestamp" , "yyyy-MM-dd HH:mm:ss" ]
      target => "acc_timestamp"
      timezone => "UTC"
    }
    mutate {
       remove_field => [ 'acc_date', 'acc_time', 'message']
    }
  }

  #WebLogic Diagnostic Log
  if "weblogic-diagnostic-log" in [tags] {
    grok {
    patterns_dir=>"./patterns"
      match => [ "message", "\[%{TIMESTAMP_ISO8601:diag_timestamp}\]%{SPACE}\[%{WORDNOBRACKET:diag_server}\]%{SPACE}\[%{WORDNOBRACKET:diag_msgType}\]%{SPACE}\[%{WORDNOBRACKET:diag_add}\]%{SPACE}\[%{WORDNOBRACKET:diag_compId}\]%{SPACE}\[%{DATA:diag_threadId}\]%{SPACE}\[%{WORDNOBRACKET:diag_userId}\]%{SPACE}\[%{WORDNOBRACKET:diag_ecid}\]%{SPACE}\[%{WORDNOBRACKET:diag_suppleAttr}\]%{SPACE}%{GREEDYDATA:diag_msgText}" ]
    }
    date {
      match => [ "diag_timestamp" , "yyyy-MM-dd'T'HH:mm:ss.SSSZ" ]
      target => "diag_timestamp"
    }
    mutate {
       remove_field => ['message']
    } 
  }

  # WebLogic Output Log
  if "weblogic-stdout-log" in [tags] {
    grok {
      patterns_dir => "./patterns"
      match => [ "message", "<%{WLS_SERVERLOG_DATE:out_timestamp}%{SPACE}%{DATA:out_timezone}>%{SPACE}<%{LOGLEVEL:out_level}>%{SPACE}<%{DATA:out_subsystem}>%{SPACE}<%{DATA:wls_code}>%{SPACE}<%{GREEDYDATA:out_message}" ]
    }
    # CEST id does not exist in JODA-TIME, changed to CET
    translate {
      field       => 'out_timezone'
      destination => 'out_timezone'
      fallback => '%{out_timezone}'
      override => "true"
      dictionary  => [
        'CEST',  'CET'
      ]
    }
    date {
      match => [ "out_timestamp", "dd-MMM-yyyy HH'H'mm'''"]
      locale => "es-ES"
      timezone => "%{out_timezone}"
      target => "out_timestamp"
    }
    mutate {
       remove_field => [ 'out_timezone' , 'message']
    }
  }
}

output {
  elasticsearch { hosts => ["localhost:9200"] }
  stdout { codec => rubydebug }
}